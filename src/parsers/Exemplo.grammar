%package "src.parsers";
%import "src.ast.*";
%import "src.beaver.*";

%class "MiniLangParser";

%terminals ID, INT, TYPE, FLOAT, CHAR, BOOL, NULL,   
           MULT, PLUS, SUB, DIV, RES, 
           EQ, IF,
           RB, LB, AP, FP, COLON, SEMI,
           GREATER;

%left FP;
%left MULT, DIV, RES;
%left PLUS, SUB;

%typeof INT = "Integer";
%typeof TYPE = "String";
%typeof FLOAT = "float";
%typeof BOOL = "boolean";
%typeof CHAR = "char";
%typeof Exp = "Node";
%typeof Pexp = "Node";
%typeof Sexp = "Node";
%typeof Mexp = "Node";
%typeof Aexp = "Node";
%typeof Rexp = "Node";
%typeof ID = "String";
%typeof Stmt = "Node";
%typeof StmtList = "Node";
%typeof Els = "Node";
%typeof Prog = "Node";

%goal Prog;

Prog = StmtList                     
     ;

StmtList = Stmt SEMI StmtList     
         | Stmt SEMI                
         ;

Stmt = ID EQ Exp                     
     | Exp IF LB StmtList ?Els RB  
     | Exp                        
     ;
     
Els = COLON StmtList               
     ;

Exp = Rexp
;

Rexp = Exp GREATER Exp
     | Aexp
;

Aexp = Exp PLUS  Exp           
     | Exp SUB  Exp
     | Mexp  
;
      
Mexp = Exp MULT  Exp           
     | Exp DIV  Exp
     | Exp RES  Exp  
     | Sexp                          
;

Sexp = BOOL                        
     | NULL                     
     | INT                       
     | FLOAT                          
     | CHAR
     | Pexp                                                     
;

Pexp = AP Exp FP                        
     | TYPE LB Exp RB
     | ID             
;